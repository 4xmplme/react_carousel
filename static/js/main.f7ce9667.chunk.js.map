{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","currentImage","setCurrentImage","carouselWidth","translateDistance","maxImages","length","isDisabledPrev","isDisabledNext","className","style","width","transition","map","image","id","transform","src","alt","type","disabled","cn","onClick","stepResult","App","useState","corouselSettings","setCorouselSettings","htmlFor","min","max","value","onChange","event","prevState","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7ce9667.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n  currentImage: number;\n  setCurrentImage: (value: number) => void;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n  currentImage,\n  setCurrentImage,\n}) => {\n  const carouselWidth = itemWidth * frameSize;\n  const translateDistance = currentImage * itemWidth;\n  const maxImages = images.length - frameSize;\n\n  function handlePrev() {\n    const stepResult = currentImage - step;\n    const limitStep = stepResult < 0 ? 0 : stepResult;\n\n    return setCurrentImage(currentImage === 0 ? maxImages : limitStep);\n  }\n\n  function handleNext() {\n    const stepResult = currentImage + step;\n    const limitStep = stepResult > maxImages ? maxImages : stepResult;\n\n    return setCurrentImage(currentImage === maxImages ? 0 : limitStep);\n  }\n\n  const isDisabledPrev = currentImage === 0 && !infinite;\n  const isDisabledNext = currentImage === maxImages && !infinite;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${carouselWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, id) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(-${translateDistance}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${id + 1}`}\n              width={itemWidth}\n              className=\"Carousel__image\"\n              style={{\n                transition: `${animationDuration}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          disabled={isDisabledPrev}\n          className={cn('Carousel__button', {\n            'Carousel__button--disabled': isDisabledPrev,\n          })}\n          onClick={handlePrev}\n        >\n          ←\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          disabled={isDisabledNext}\n          className={cn('Carousel__button', {\n            'Carousel__button--disabled': isDisabledNext,\n          })}\n          onClick={handleNext}\n        >\n          →\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  const [corouselSettings, setCorouselSettings] = useState({\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n    currentImage: 0,\n  });\n\n  const {\n    itemWidth,\n    frameSize,\n    step,\n    animationDuration,\n    infinite,\n    currentImage,\n  } = corouselSettings;\n\n  const setCurrentImage = (value: number) => {\n    return setCorouselSettings(prevState => ({\n      ...prevState,\n      currentImage: value,\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\" className=\"App__title\">{`Carousel with ${images.length} images`}</h1>\n\n      <div className=\"App__settings\">\n        <label\n          htmlFor=\"itemId\"\n          className=\"App__label\"\n        >\n          Item width:\n\n          <input\n            type=\"number\"\n            min=\"70\"\n            max=\"260\"\n            step=\"5\"\n            value={itemWidth}\n            id=\"itemId\"\n            className=\"App__input\"\n            onChange={event => setCorouselSettings(prevState => ({\n              ...prevState,\n              itemWidth: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameId\"\n          className=\"App__label\"\n        >\n          Frame size:\n\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            value={frameSize}\n            id=\"frameId\"\n            className=\"App__input\"\n            onChange={event => setCorouselSettings(prevState => ({\n              ...prevState,\n              frameSize: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label\n          htmlFor=\"stepId\"\n          className=\"App__label\"\n        >\n          Step:\n\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"3\"\n            step=\"1\"\n            value={step}\n            id=\"stepId\"\n            className=\"App__input\"\n            onChange={event => setCorouselSettings(prevState => ({\n              ...prevState,\n              step: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Animation duration:\n\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"5000\"\n            step=\"500\"\n            value={animationDuration}\n            className=\"App__input\"\n            onChange={event => setCorouselSettings(prevState => ({\n              ...prevState,\n              animationDuration: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Infinite:\n\n          <input\n            type=\"checkbox\"\n            className=\"App__switch\"\n            onChange={() => setCorouselSettings(prevState => ({\n              ...prevState,\n              infinite: !prevState.infinite,\n            }))}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n        infinite={infinite}\n        currentImage={currentImage}\n        setCurrentImage={setCurrentImage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}